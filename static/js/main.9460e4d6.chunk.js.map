{"version":3,"sources":["components/LoginForm/LoginForm.js","components/Welcome/Welcome.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","login","handleLogin","error","useState","name","email","password","details","setDetails","className","onSubmit","e","preventDefault","type","id","onChange","target","value","onClick","Wellcome","userName","user","handleLogout","App","adminUser","setUser","setError","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9460e4d6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginForm.css';\r\n\r\nconst LoginForm = (props) => {\r\n    const login = props.handleLogin;\r\n    const error = props.error;\r\n    const [details, setDetails] = useState({name : \"\", email: \"\", password: \"\"});\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        login(details);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-sm-12 col-md-12 col-lg-12 form-div\">\r\n                    <div className=\"form-container\">\r\n                        <form className=\"p-4\" onSubmit={submitHandler}>\r\n                            <h1 className=\"text-white pb-3\">Login</h1> \r\n                            {\r\n                                error ? <h3 className=\"text-danger\">{error}</h3> : \"\"\r\n                            }\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label text-white\">Name</label>\r\n                                <input type=\"text\" name=\"name\" className=\"form-control input-background\" id=\"\" onChange={e => setDetails({...details, name:e.target.value})} value={details.name} />\r\n                                <p className=\"text-warning\"><small>Test Name : Write any name</small></p>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label text-white\">Email Address</label>\r\n                                <input type=\"email\" name=\"email\" className=\"form-control input-background\" id=\"\" onChange={e => setDetails({...details, email:e.target.value})} value={details.email}/>\r\n                                <p className=\"text-warning\"><small>Test Email : admin@admin.com</small></p>\r\n                            </div>\r\n                            <div className=\"mb-3\">\r\n                                <label className=\"form-label text-white\">Password</label>\r\n                                <input type=\"password\" name=\"password\" className=\"form-control input-background\" id=\"\" onChange={e => setDetails({...details, password:e.target.value})} value={details.password}/>\r\n                                <p className=\"text-warning\"><small>Test Password : admin123</small></p>\r\n                            </div>\r\n                            <button type=\"submit\" className=\"submit-button\" onClick={login}>Login</button>\r\n                            \r\n                        </form>\r\n                    </div>\r\n                </div>    \r\n            </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport './Welcome.css';\r\n\r\nconst Wellcome = (props) => {\r\n    const userName =  props.user.name;\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 welcome\">\r\n                    <div className=\"welcome-div\">\r\n                        <h1>Welcome, <span className=\"userNameText\">{userName}</span></h1> \r\n                        <button type=\"button\" className=\"logout-button\" onClick={props.handleLogout}>Logout</button>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Wellcome;","import { useState } from 'react';\nimport './App.css';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport Welcome from './components/Welcome/Welcome';\n\nfunction App() {\n  const adminUser = {\n    email: 'admin@admin.com',\n    password: 'admin123'\n  }\n\n  const [user, setUser] = useState({name:\"\", email: \"\"});\n  const [error, setError] = useState(\"\");\n\n  const handleLogin = (details) => {\n    console.log(details);\n    if (details.email === adminUser.email && details.password === adminUser.password){\n      setUser({\n        name:details.name,\n        email:details.email\n      })\n    }else{\n     setError('Invalid credential')\n    }\n  }\n\n  const handleLogout = () => {\n      setError('');\n      setUser({\n        name: \"\",\n        email:\"\"\n      })\n  }\n\n  return (\n    <>\n      {\n        user.email \n        ?\n          <Welcome handleLogout={handleLogout} user={user}/>\n        :\n          <LoginForm handleLogin={handleLogin} error={error} />\n      }\n      \n     \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}